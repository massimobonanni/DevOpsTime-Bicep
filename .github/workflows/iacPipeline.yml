name: CI/CD on IaC

on:
  workflow_dispatch:

      
env: 
  BICEP_PROJECT_PATH: '${{ github.workspace }}/03 - Modules'
  BICEP_MAIN_TEMPLATE: '03-main.bicep'
  BUILD_OUTPUT_PATH: '${{ github.workspace }}/build-artifacts'
  DEPLOY_LOCATION: 'northeurope'
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install Azure CLI
        run: curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      - name: Install BICEP module
        run: az bicep install
        
      - name: Build BICEP template
        run: |
          mkdir ${{ env.BUILD_OUTPUT_PATH }}
          cd ${{ env.BUILD_OUTPUT_PATH }}
          az bicep build --file '${{ env.BICEP_PROJECT_PATH }}/${{ env.BICEP_MAIN_TEMPLATE }}' --outfile main.json
      
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          name: build_artifacts
          path: ${{ env.BUILD_OUTPUT_PATH }}
          if-no-files-found: error

  deployOnDev:
    runs-on: ubuntu-latest
    
    environment: Dev
    
    needs: build
    
    env:
      AZURE_CREDENTIAL: ${{ secrets.AZURE_CREDENTIAL }}
      RESOURCEGROUP_NAME: 'DevopsTimeGH-dev-rg'
      DEPLOY_ENVIRONMENT_TYPE: 'dev'
      DEPLOYMENT_NAME: ${{ github.run_id }}

    steps:
      - name: Download a Build Artifact
        uses: actions/download-artifact@v3.0.0
        with:
          name: build_artifacts
          path: ${{ env.BUILD_OUTPUT_PATH }}
      
      - name: Install Azure CLI
        run: curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
        
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ env.AZURE_CREDENTIAL }}
      
      - name: Validate ARM Template
        run: |
          cd ${{ env.BUILD_OUTPUT_PATH }} 
          az deployment group validate --resource-group ${{ env.RESOURCEGROUP_NAME }} --template-file main.json --name ${{ env.DEPLOYMENT_NAME }} --parameters environmentType=${{ env.DEPLOY_ENVIRONMENT_TYPE }}
          
      - name: Deploy ARM Template
        run: |
          cd ${{ env.BUILD_OUTPUT_PATH }} 
          az deployment group create --resource-group ${{ env.RESOURCEGROUP_NAME }}  --template-file main.json --name ${{ env.DEPLOYMENT_NAME }} --parameters environmentType=${{ env.DEPLOY_ENVIRONMENT_TYPE }}

  deployOnTest:
    runs-on: ubuntu-latest
    
    environment: Test
        
    needs: deployOnDev
       
    env:
      AZURE_CREDENTIAL: ${{ secrets.AZURE_CREDENTIAL }}
      RESOURCEGROUP_NAME: 'DevopsTimeGH-test-rg'
      DEPLOY_ENVIRONMENT_TYPE: 'test'
      DEPLOYMENT_NAME: ${{ github.run_id }}

    steps:
      - name: Download a Build Artifact
        uses: actions/download-artifact@v3.0.0
        with:
          name: build_artifacts
          path: ${{ env.BUILD_OUTPUT_PATH }}
      
      - name: Install Azure CLI
        run: curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
        
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ env.AZURE_CREDENTIAL }}
      
      - name: Validate ARM Template
        run: |
          cd ${{ env.BUILD_OUTPUT_PATH }} 
          az deployment group validate --resource-group ${{ env.RESOURCEGROUP_NAME }} --template-file main.json --name ${{ env.DEPLOYMENT_NAME }} --parameters environmentType=${{ env.DEPLOY_ENVIRONMENT_TYPE }}
          
      - name: Deploy ARM Template
        run: |
          cd ${{ env.BUILD_OUTPUT_PATH }} 
          az deployment group create --resource-group ${{ env.RESOURCEGROUP_NAME }}  --template-file main.json --name ${{ env.DEPLOYMENT_NAME }} --parameters environmentType=${{ env.DEPLOY_ENVIRONMENT_TYPE }}

  deployOnProduction:
    runs-on: ubuntu-latest
    
    environment: Production
        
    needs: deployOnTest
       
    env:
      AZURE_CREDENTIAL: ${{ secrets.AZURE_CREDENTIAL }}
      RESOURCEGROUP_NAME: 'DevopsTimeGH-prod-rg'
      DEPLOY_ENVIRONMENT_TYPE: 'prod'
      DEPLOYMENT_NAME: ${{ github.run_id }}

    steps:
      - name: Download a Build Artifact
        uses: actions/download-artifact@v3.0.0
        with:
          name: build_artifacts
          path: ${{ env.BUILD_OUTPUT_PATH }}
      
      - name: Install Azure CLI
        run: curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
        
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ env.AZURE_CREDENTIAL }}
      
      - name: Validate ARM Template
        run: |
          cd ${{ env.BUILD_OUTPUT_PATH }} 
          az deployment group validate --resource-group ${{ env.RESOURCEGROUP_NAME }} --template-file main.json --name ${{ env.DEPLOYMENT_NAME }} --parameters environmentType=${{ env.DEPLOY_ENVIRONMENT_TYPE }}
          
      - name: Deploy ARM Template
        run: |
          cd ${{ env.BUILD_OUTPUT_PATH }} 
          az deployment group create --resource-group ${{ env.RESOURCEGROUP_NAME }}  --template-file main.json --name ${{ env.DEPLOYMENT_NAME }} --parameters environmentType=${{ env.DEPLOY_ENVIRONMENT_TYPE }}
