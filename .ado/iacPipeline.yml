trigger:
 branches:
  include:
     - main
 paths:  
    exclude: 
     - ".github/*" 


  

variables:
  vmImageName: 'ubuntu-latest'
  azureSubscription: 'DeployConnection'
  templatePath: './03 - Modules'
  templateFile: '03-main'
  outDir: './out'
  azureLocation: 'northeurope'
  
name: $(Date:yyyyMMdd)$(Rev:.r)

stages:
- stage: Build
  jobs:
  - job: BuildAndTest
    displayName: 'Build'
    pool:
      vmImage: $(vmImageName)
    
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          mkdir $(outdir)
          az bicep build \
            --file '$(templatePath)/$(templateFile).bicep' \
            --outdir '$(outdir)'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(outdir)'
        ArtifactName: 'ARMTemplate'
        publishLocation: 'Container'

- stage: DeployToDev
  variables:
    resourceGroupName: 'DevopsTimeADO-dev-rg'
    deployEnvironmentType: 'dev'
    deloymentName: $(buildName)

  dependsOn: 
    Build

  jobs:
  - deployment : DevEnvironment
    environment: Dev
    
  - job:
    displayName: 'Deploy to dev environment'
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: DownloadBuildArtifacts@1
      inputs:
        artifactName: 'ARMTemplate'
        buildType: 'current'
        downloadType: 'single'
        downloadPath: '$(Build.ArtifactStagingDirectory)'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'DeployConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az deployment group validate \
            --template-file '$(Build.ArtifactStagingDirectory)/ARMTemplate/$(templateFile).json' \
            --resource-group $(resourceGroupName) \
            --parameters environmentType=$(deployEnvironmentType)

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'DeployConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az deployment group create \
            --name '$(Build.BuildId)' \
            --template-file '$(Build.ArtifactStagingDirectory)/ARMTemplate/$(templateFile).json' \
            --resource-group $(resourceGroupName) \
            --parameters environmentType=$(deployEnvironmentType)

- stage: DeployToTest
  variables:
    resourceGroupName: 'DevopsTimeADO-test-rg'
    deployEnvironmentType: 'test'
    deloymentName: $(buildName)
  
  dependsOn: 
    DeployToDev

  jobs:
  - deployment : TestEnvironment
    environment: Test

  - job: DeployToTest
    displayName: 'Deploy to test environment'
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: DownloadBuildArtifacts@1
      inputs:
        artifactName: 'ARMTemplate'
        buildType: 'current'
        downloadType: 'single'
        downloadPath: '$(Build.ArtifactStagingDirectory)'
        
    - task: AzureResourceManagerTemplateDeployment@3
      inputs:
        deploymentScope: 'Resource Group'
        azureResourceManagerConnection: 'DeployConnection'
        subscriptionId: '02e4a7f0-e0bc-4ae8-8fa8-73f1686fb788'
        action: 'Create Or Update Resource Group'
        resourceGroupName: 'DevopsTimeADO-test-rg'
        location: 'North Europe'
        templateLocation: 'Linked artifact'
        csmFile: '$(Build.ArtifactStagingDirectory)/ARMTemplate/$(templateFile).json'
        overrideParameters: '-environmentType $(deployEnvironmentType)'
        deploymentMode: 'Incremental'
        deploymentName: '$(Build.BuildId)'
    
- stage: DeployToProd
  variables:
    resourceGroupName: 'DevopsTimeADO-prod-rg'
    deployEnvironmentType: 'prod'
    deloymentName: $(buildName)
  
  dependsOn: 
    DeployToTest

  jobs:
  - deployment : ProdEnvironment
    environment: Production

  - job: DeployToProd
    displayName: 'Deploy to prod environment'
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: DownloadBuildArtifacts@1
      inputs:
        artifactName: 'ARMTemplate'
        buildType: 'current'
        downloadType: 'single'
        downloadPath: '$(Build.ArtifactStagingDirectory)'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'DeployConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          ls '$(Build.ArtifactStagingDirectory)/ARMTemplate'
          az deployment group create \
            --name '$(Build.BuildId)' \
            --template-file '$(Build.ArtifactStagingDirectory)/ARMTemplate/$(templateFile).json' \
            --resource-group $(resourceGroupName) \
            --parameters environmentType=$(deployEnvironmentType)