trigger:
 branches:
  include:
     - main

variables:
  vmImageName: 'ubuntu-latest'
  azureSubscription: 'DeployConnection'
  templatePath: './03 - Modules'
  templateFile: '03-main'
  outDir: './out'
  azureLocation: 'northeurope'
  buildName: $(Date:yyyyMMdd)$(Rev:.r)
  
name: $(buildName)

stages:
- stage: Build
  jobs:
  - job: BuildAndTest
    displayName: 'Build'
    pool:
      vmImage: $(vmImageName)
    
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          mkdir $(outdir)
          az bicep build --file '$(templatePath)/$(templateFile).bicep' --outdir '$(outdir)'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(outdir)'
        ArtifactName: 'ARMTemplate'
        publishLocation: 'Container'

- stage: DeployToDev
  variables:
    resourceGroupName: 'DevopsTimeADO-dev-rg'
    deployEnvironmentType: 'dev'
    deloymentName: $(buildName)
  
  dependsOn: 
    Build

  jobs:
  - job: DeployToDev
    displayName: 'Deploy to dev environment'
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: DownloadBuildArtifacts@1
      inputs:
        artifactName: 'ARMTemplate'
        buildType: 'current'
        downloadType: 'single'
        downloadPath: '$(Build.ArtifactStagingDirectory)'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'DeployConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          ls '$(Build.ArtifactStagingDirectory)/ARMTemplate'
          az deployment group create --name '$(deloymentName)' --template-file '$(Build.ArtifactStagingDirectory)/ARMTemplate/$(templateFile).json' --resource-group $(resourceGroupName) --parameters environmentType=$(deployEnvironmentType)